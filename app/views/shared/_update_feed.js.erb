<% if session[:feed_status] == "public" %>
  <% if session[:sort_order] == "recent" %>
    $('#feed').html('<h3>Newsfeed (viewing everyone by most recent)</h3> <%= link_to 'View friends', switchfeed_path(:feed_status => "private"), :remote => true %> -- <%= link_to 'Sort by most popular', switchfeed_path(:sort_order => "popular"), :remote => true %> <%= escape_javascript(@filter_title) %><%= escape_javascript(render(:partial => "shared/feed")) %>');
  <% else %>
    $('#feed').html('<h3>Newsfeed (viewing everyone by most popular)</h3> <%= link_to 'View friends', switchfeed_path(:feed_status => "private"), :remote => true %> -- <%= link_to 'Sort by most recent', switchfeed_path(:sort_order => "recent"), :remote => true %> <%= escape_javascript(@filter_title) %><%= escape_javascript(render(:partial => "shared/feed")) %>');
  <% end %>
<% else %>
  <% if session[:sort_order] == "recent" %>
    $('#feed').html('<h3>Newsfeed (viewing friends by most recent)</h3>	<%= link_to 'View everyone', switchfeed_path(:feed_status => "public"), :remote => true %> -- <%= link_to 'Sort by most popular', switchfeed_path(:sort_order => "popular"), :remote => true %> <%= escape_javascript(@filter_title) %><%= escape_javascript(render(:partial => "shared/feed")) %>');
  <% else %>
    $('#feed').html('<h3>Newsfeed (viewing friends by most popular)</h3> <%= link_to 'View everyone', switchfeed_path(:feed_status => "public"), :remote => true %> -- <%= link_to 'Sort by most recent', switchfeed_path(:sort_order => "recent"), :remote => true %> <%= escape_javascript(@filter_title) %><%= escape_javascript(render(:partial => "shared/feed")) %>');
  <% end %>
<% end %>

//Below line was here to clear unread counts - taking out because it now resets the user's list expansion everytime they click a category - handle unread count w/ ajax
//$('#category_links').html('<%= escape_javascript(render(:partial => "shared/category_links")) %>');

$('#friend-block').html('<%= escape_javascript(render(:partial => "shared/friend_block")) %>').hide().show();

	$('.content a').attr('target', '_blank');
	//Translate links in post text to embedded content
	$('.content').embedly({
		//Place embedded content after post
		method: "after",
		maxWidth: 500,
		chars: 150,
		key: '6c398a44d6034de4b75ea047c32e83fe', //TODO: CHANGE THIS TO CLIENT'S API KEY
		
		//Override default success callback to insert target into anchors
		success: function(oembed, dict){
			var _a, elem = $(dict.node);
			if (! (oembed) ) { return null; }
			oembed.code = oembed.code.replace('<a href', '<a target="_blank" href');
			return elem.after(oembed.code);
		}
	});
		
$('.pagination a').attr('data-remote', 'true');